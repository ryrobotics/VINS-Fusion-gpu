%YAML:1.0

#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
imu: 0
num_of_cam: 2

imu_topic: "/mavros/imu/data_raw"
image0_topic: "/camera/infra1/image_rect_raw"
image1_topic: "/camera/infra2/image_rect_raw"

output_path: "/src/vins_ws/vins_output"

cam0_calib: "left.yaml"
cam1_calib: "right.yaml"
image_width: 640
image_height: 480

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 1   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.

body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [ -8.1173983824662344e-02, -5.5392871506276330e-02,
       9.9515949180838503e-01, 2.6738411671782220e-01,
       -9.9668239664943759e-01, 1.0436454771247883e-02,
       -8.0717288240756274e-02, -3.0197928253821887e-01,
       -5.9147746505811439e-03, -9.9841009119404300e-01,
       -5.6056268540958243e-02, 1.9304161282401000e-01, 0., 0., 0., 1. ]
body_T_cam1: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [ -8.2010283601558154e-02, -5.4946283067509448e-02,
       9.9511568139621709e-01, 2.6476266448015801e-01,
       -9.9662183094816437e-01, 8.9157593076972796e-03,
       -8.1642117277149470e-02, -3.3560167399392421e-01,
       -4.3862810125029281e-03, -9.9844950559005874e-01,
       -5.5491849183884945e-02, 1.9267728120775460e-01, 0., 0., 0., 1. ]

# body_T_cam0: !!opencv-matrix
#    rows: 4
#    cols: 4
#    dt: d
#    data: [ 0, 0, 1, 7.7e-02,
#            -1, 0, 0, 3.25e-02,
#            0, -1, 0, 5.0e-02,
#            0., 0., 0., 1. ]
# body_T_cam1: !!opencv-matrix
#    rows: 4
#    cols: 4
#    dt: d
#    data: [ 0, 0, 1, 7.7e-02,
#            -1, 0, 0, -1.75e-02,
#            0, -1, 0, 5.0e-02,
#            0., 0., 0., 1. ]

#Multiple thread support
multiple_thread: 1
use_gpu: 1
use_gpu_acc_flow: 1
enable_downsample: 0

#feature traker paprameters
max_cnt: 50            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 0           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.04          # accelerometer measurement noise standard deviation.      # 0.01      0.2     0.04
gyr_n: 0.004         # gyroscope measurement noise standard deviation.          # 0.001     0.05    0.004
acc_w: 0.0001        # accelerometer bias random work noise standard deviation. # 0.0001    0.02
gyr_w: 0.00004       # gyroscope bias random work noise standard deviation.     # 0.00001   4.0e-5
g_norm: 9.8         # gravity magnitude

#unsynchronization parameters
estimate_td: 1                      # online estimate time offset between camera and imu
td: -0.002                          # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "/src/savedfiles/output/pose_graph/" # save and load path
save_image: 0                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
